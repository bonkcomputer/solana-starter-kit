/**
 * OG User Detection Utility
 * Determines if a user is an "Original Gangster" (OG) user
 */

export interface OGUserCheck {
  isOG: boolean;
  reason?: string;
}

/**
 * Check if a user is an OG user based on various criteria
 * @param username - The user's username
 * @param createdAt - The user's creation date
 * @param privyDid - The user's Privy DID
 * @returns OGUserCheck object with isOG boolean and optional reason
 */
export function isOGUser(
  username: string,
  createdAt: Date | string,
  privyDid?: string
): OGUserCheck {
  const createdDate = typeof createdAt === 'string' ? new Date(createdAt) : createdAt;
  
  // OG cutoff date - users created before July 6, 2025 are considered OG
  const ogCutoffDate = new Date('2025-07-06T00:00:00Z');
  
  // Check if user was created before the cutoff date
  if (createdDate < ogCutoffDate) {
    return {
      isOG: true,
      reason: 'Early adopter'
    };
  }
  
  // Check if user has auto-generated username pattern (restored users)
  if (isAutoGeneratedUsername(username)) {
    return {
      isOG: true,
      reason: 'Restored user'
    };
  }
  
  // Check if user has cmcq prefix in privyDid (from CSV restoration)
  if (privyDid && privyDid.includes('cmcq')) {
    return {
      isOG: true,
      reason: 'Restored from CSV'
    };
  }
  
  return {
    isOG: false
  };
}

/**
 * Check if a username follows the auto-generated pattern
 * @param username - The username to check
 * @returns boolean indicating if username is auto-generated
 */
function isAutoGeneratedUsername(username: string): boolean {
  // Pattern: user_ followed by 8 characters (wallet/ID based)
  const autoGeneratedPattern = /^user_[a-zA-Z0-9]{8}$/;
  return autoGeneratedPattern.test(username);
}

/**
 * Get OG badge text based on the reason
 * @param reason - The reason why user is OG
 * @returns string for badge display
 */
export function getOGBadgeText(reason?: string): string {
  switch (reason) {
    case 'Early adopter':
      return 'OG';
    case 'Restored user':
      return 'OG';
    case 'Restored from CSV':
      return 'OG';
    default:
      return 'OG';
  }
}

/**
 * Get OG badge tooltip text
 * @param reason - The reason why user is OG
 * @returns string for tooltip display
 */
export function getOGBadgeTooltip(reason?: string): string {
  switch (reason) {
    case 'Early adopter':
      return 'Original community member';
    case 'Restored user':
      return 'Original community member';
    case 'Restored from CSV':
      return 'Original community member';
    default:
      return 'Original community member';
  }
}
