// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  privyDid              String    @id @unique
  createdAt             DateTime  @default(now())
  username              String    @unique
  bio                   String?
  image                 String?
  solanaWalletAddress   String?
  embeddedWalletAddress String?
  lastUsernameChange    DateTime? // Track when username was last changed
  following             Follow[]  @relation("Followers")
  followers             Follow[]  @relation("Following")
  authoredComments      Comment[] @relation("AuthoredComments")
  profileComments       Comment[] @relation("ProfileComments")
  likes                 Like[]
}

model Follow {
  followerId  String
  followingId String
  follower    User     @relation("Following", fields: [followerId], references: [privyDid])
  following   User     @relation("Followers", fields: [followingId], references: [privyDid])

  @@id([followerId, followingId])
}

model Comment {
  id                String   @id @default(cuid())
  text              String
  createdAt         DateTime @default(now())
  authorId          String
  profileId         String
  tapestryCommentId String?  @unique
  author            User     @relation("AuthoredComments", fields: [authorId], references: [privyDid])
  profile           User     @relation("ProfileComments", fields: [profileId], references: [privyDid])
  likes             Like[]
}

model Like {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  userId    String
  commentId String
  user      User     @relation(fields: [userId], references: [privyDid])
  comment   Comment  @relation(fields: [commentId], references: [id])

  @@unique([userId, commentId])
}
